--DML

--TRIGGER TO CALCULATE ORDER_TOTAL_PRICE IN ORDER TABLE

CREATE TRIGGER CAL_ORDER_TOTAL_PRICE
AFTER INSERT ON ORDER
FOR EACH ROW MODE DB2SQL
UPDATE ORDER 
SET ORDER_TOTAL_PRICE = ORDER_QUANTITY * (SELECT PIZZA_PRICE FROM PIZZA WHERE PIZZA.PIZZA_ID=ORDER.PIZZA_ID);

INSERT INTO ORDER VALUES
('IAA04','103',2,'0');

--DROP TRIGGER CAL_ORDER_TOTAL_PRICE;


--PROCEDURE TO GET INFORMATION OF PIZZA BY PASSING PIZZA ID
CREATE PROCEDURE GETPIZZAINFO (IN INV_ID INT)
BEGIN 
DECLARE C CURSOR WITH RETURN FOR
SELECT * FROM PIZZA WHERE PIZZA_ID =INV_ID;
OPEN C;
END@

--CALL GETPIZZAINFO (104);


--PROCEDURE TO CALCULATE INVOICE TOTAL PRICE

CREATE PROCEDURE INVOICE_TOTAL_PRICE (IN INV_ID VARCHAR(6))
BEGIN 
DECLARE C CURSOR WITH RETURN FOR
SELECT INVOICE_ID,SUM(ORDER_TOTAL_PRICE) FROM ORDER WHERE INVOICE_ID=INV_ID GROUP BY INVOICE_ID  ;
OPEN C;
END@

--CALL INVOICE_TOTAL_PRICE ('IAA06');


--PROCEDURE TO CALCULATE PIZZA MAXIMUM ORDER

CREATE PROCEDURE PIZZA_MAX_ORDER (IN INV_ID INT)
BEGIN 
DECLARE C CURSOR WITH RETURN FOR
SELECT PIZZA_ID,MAX(ORDER_QUANTITY) FROM ORDER GROUP BY PIZZA_ID HAVING PIZZA_ID =INV_ID ;
OPEN C;
END@

--CALL PIZZA_MAX_ORDER (100);

--VIEW TO DELIVERY INFORMATION

CREATE VIEW DELIVERY_VIEW AS
SELECT DELIVERY_ID,DELIVERY_STATUS,INVOICE_DATE,INVOICE_PAYMENT,CUSTOMER_NAME,
CUSTOMER_PHONE,OUTLET_NAME,OUTLET_ZIPCODE,STAFF_NAME,
VEHICLE_PLATE_NUMBER
FROM DELIVERY,INVOICE,CUSTOMER,STAFF,VEHICLE,OUTLET 
WHERE DELIVERY.INVOICE_ID=INVOICE.INVOICE_ID AND INVOICE.CUSTOMER_ID=CUSTOMER.CUSTOMER_ID AND DELIVERY.OUTLET_ID=OUTLET.OUTLET_ID AND
DELIVERY.STAFF_ID=STAFF.STAFF_ID AND STAFF.VEHICLE_ID=VEHICLE.VEHICLE_ID;

SELECT * FROM DELIVERY_VIEW;


--AGGREGATE FUNCTION

--VIEW TOP THREE STAFF

SELECT STAFF_NAME,COUNT(STAFF_NAME)FROM DELIVERY_VIEW
 GROUP BY STAFF_NAME 
 ORDER BY COUNT(STAFF_NAME) DESC 
 FETCH FIRST 3 ROWS ONLY;



--GROUP BY AND HAVING CLAUSES

--AVERAGE OF ORDER TOTAL PRICE OF INVOICE ID=IAA05

SELECT INVOICE_ID,AVG(ORDER_TOTAL_PRICE) FROM ORDER 
	GROUP BY INVOICE_ID HAVING INVOICE_ID='IAA05';


--SUBQUERIES/NESTED QUERIES

--UPDATE ADDRESS UNIT NUMBER

UPDATE ADDRESS
SET ADDRESS_UNIT_NUMBER=123123 WHERE ADDRESS_ID IN
(SELECT ADDRESS_ID FROM CUSTOMER WHERE CUSTOMER_ID='NO777');


--DISPLAY TOP N RECORDS

SELECT * FROM ADDRESS FETCH FIRST 2 ROWS ONLY;
